#the Poisson distribution is a limit of the Binomial distribution for rare events. 
#This makes sense if you think about the stories. Say we do a Bernoulli trial every minute for an hour, each with a success probability of 0.1. 
#We would do 60 trials, and the number of successes is Binomially distributed, and we would expect to get about 6 successes. 
#This is just like the Poisson story we discussed in the video, where we get on average 6 hits on a website per hour. 
#So, the Poisson distribution with arrival rate equal to np approximates a Binomial distribution 
#for n Bernoulli trials with probability p of success (with n large and p small).
#Importantly, the Poisson distribution is often simpler to work with because it has only one parameter instead of two for the Binomial distribution.



#Using the np.random.poisson() function, draw 10000 samples from a Poisson distribution with a mean of 10.
# Draw samples_poisson

samples_poisson=np.random.poisson(10,size=10000)

# Print the mean and standard deviation
print('Poisson:     ', np.mean(samples_poisson),
                       np.std(samples_poisson))
                       
# Make a list of the n and p values to consider for the Binomial distribution. Choose n = [20, 100, 1000] and p = [0.5, 0.1, 0.01] so that np is always 10.
# Specify values of n and p to consider for Binomial: n, p
n = [20, 100, 1000]
p = [0.5, 0.1, 0.01]

# Draw 10,000 samples for each n,p pair: samples_binomial
for i in range(3):
    samples_binomial = np.random.binomial(n[i],p[i],size=10000)

    # Print results
    print('n =', n[i], 'Binom:', np.mean(samples_binomial),
                                 np.std(samples_binomial))

#<script.py> output:
    #Poisson:      10.0186 3.144813832327758
    #n = 20 Binom: 9.9637 2.2163443572694206
    #n = 100 Binom: 9.9947 3.0135812433050484
    #n = 1000 Binom: 9.9985 3.139378561116833

# interpretation
#The means are all about the same, which can be shown to be true by doing some pen-and-paper work. 
#The standard deviation of the Binomial distribution gets closer and closer to that of the Poisson distribution 
#as the probability p gets lower and lower.





#example 2 
# Draw 10,000 samples out of Poisson distribution: n_nohitters
n_nohitters=np.random.poisson(251/115,size=10000)

# Compute number of samples that are seven or greater: n_large
n_large = np.sum(n_nohitters>=7)

# Compute probability of getting seven or more: p_large
p_large=n_large/10000

# Print the result
print('Probability of seven or more no-hitters:', p_large)

#output
#Probability of seven or more no-hitters: 0.0074

#<script.py> output:
    #Probability of seven or more no-hitters: 0.0067
    
#interpretation 

# The result is about 0.007. This means that it is not that improbable to see a 7-or-more no-hitter season in a century. 
# We have seen two in a century and a half, so it is not unreasonable.
