#In statistics, an empirical distribution function is the distribution function associated with the empirical measure of a sample. 
#This cumulative distribution function is a step function that jumps up by 1/n at each of the n data points.
#ECDF formula function 

def ecdf(data):
    """Compute ECDF for a one-dimensional array of measurements."""
    # Number of data points: n
    n= len(data)

    # x-data for the ECDF: x
    x= np.sort(data)

    # y-data for the ECDF: y
    y= np.arange(1, n+1)/n

    return x, y
    
# plot ECDF 
# dataset: versicolor_petal_length
import numpy as np
# Compute ECDF for versicolor data: x_vers, y_vers
x_vers, y_vers= ecdf(versicolor_petal_length)

# Generate plot
plt.plot(x_vers, y_vers,marker = '.',linestyle = 'none')

# Label the axes

plt.xlabel('petal_length')
plt.ylabel('ECDF')

# Display the plot
plt.show()

    
    
   #plot three ECDFs in one chart 
   # Compute ECDFs
x_set,y_set=ecdf(setosa_petal_length)
x_vers,y_vers=ecdf(versicolor_petal_length)
x_virg,y_virg=ecdf(virginica_petal_length)

# Plot all ECDFs on the same plot

_=plt.plot(x_set, y_set,marker='.', linestyle='none')
_=plt.plot(x_vers, y_vers,marker='.', linestyle='none')
_=plt.plot(x_virg, y_virg,marker='.', linestyle='none')
# Annotate the plot
plt.legend(('setosa', 'versicolor', 'virginica'), loc='lower right')
_ = plt.xlabel('petal length (cm)')
_ = plt.ylabel('ECDF')

# Display the plot
plt.show()




#example 2 : Sampling out of the Binomial distribution


# Take 10,000 samples out of the binomial distribution: n_defaults
n_defaults=np.random.binomial(n=100,p=0.05,size=10000)

# Compute CDF: x, y
x,y=ecdf(n_defaults)

# Plot the CDF with axis labels
plt.plot(x,y,marker = '.',linestyle = 'none')

plt.xlabel('sccuess number ')
plt.ylabel('CDF')
# Show the plot
plt.show()



#example 3 : verify that the Exponential distribution describes the observed data
#Compute an ECDF from the actual time between no-hitters (nohitter_times). Use the ecdf() function

x, y = ecdf(nohitter_times)

# Create a CDF from theoretical samples: x_theor, y_theor
x_theor, y_theor = ecdf(inter_nohitter_time)

#Plot x_theor and y_theor as a line using plt.plot(). Then overlay the ECDF of the real data x and y as points. 
#To do this, you have to specify the keyword arguments marker = '.' and linestyle = 'none' in addition to x and y inside plt.plot().

plt.plot(x_theor, y_theor)
plt.plot(x, y, marker='.', linestyle='none')

# Margins and axis labels
plt.margins(0.02)
plt.xlabel('Games between no-hitters')
plt.ylabel('CDF')

# Show the plot
plt.show()

#It looks like no-hitters in the modern era of Major League Baseball are Exponentially distributed. 
#Based on the story of the Exponential distribution, this suggests that they are a random process; 
#when a no-hitter will happen is independent of when the last no-hitter was.

